concurrency:
  group: nacos-${{ github.ref }}
env:
  DOCKER_REPO: wuyfeedocker/nacos-ci
  DOCKER_REPO_B: wuyfeehub/nacos-ci
  TEST_REPO_NAME: nacos-group/nacos-e2e
jobs:
  clean:
    if: always()
    name: Clean
    needs:
    - docker
    - e2e-java-test
    - e2e-go-test
    - e2e-cpp-test
    - e2e-csharp-test
    - e2e-nodejs-test
    - e2e-python-test
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      name: clean
      uses: apache/rocketmq-test-tool@java-dev
      with:
        yamlString: 'action: clean

          namespace: nacos-${{ github.run_id }}-${{ strategy.job-index }}

          askConfig: ${{ secrets.ASK_CONFIG_VIRGINA }}

          '
    strategy:
      fail-fast: false
      matrix:
        mode:
        - cluster
        - standalone
        version: ${{ fromJSON(needs.docker.outputs.version-json) }}
    timeout-minutes: 60
  deploy:
    env:
      DATABASE: mysql
      NODE_PORT: 30000
      REPLICA_COUNT: 3
    if: ${{ success() }}
    name: Deploy nacos
    needs:
    - docker
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      name: set nodeport
      run: 'echo "NODE_PORT=$(expr $(expr $(expr $(expr ${{ strategy.job-index }}
        + 1) * ${{ github.run_number }}) % 30000) + 30000)" >> $GITHUB_ENV

        '
    - continue-on-error: true
      if: ${{ matrix.mode == 'standalone' }}
      name: set cluster params
      run: 'echo "REPLICA_COUNT=1" >> $GITHUB_ENV

        echo "DATABASE=embedded" >> $GITHUB_ENV

        '
    - continue-on-error: true
      name: allocate docker repo
      run: "if [[ $(expr $(expr ${{ github.run_id }} + ${{ strategy.job-index }} )\
        \ % 2 ) -eq 1 ]]; then\n  echo \"DOCKER_REPO_ACTUAL=${{ env.DOCKER_REPO }}\"\
        \ >> $GITHUB_ENV\nelse\n  echo \"DOCKER_REPO_ACTUAL=${{ env.DOCKER_REPO_B\
        \ }}\" >> $GITHUB_ENV\nfi\n"
    - continue-on-error: true
      name: Deploy nacos
      uses: apache/rocketmq-test-tool@java-dev
      with:
        yamlString: "action: deploy\nnamespace: nacos-${{ github.run_id }}-${{ strategy.job-index\
          \ }}\naskConfig: ${{ secrets.ASK_CONFIG_VIRGINA }}\nwaitTimes: 2000\nvelaAppDescription:\
          \ nacos-${{ env.GITHUB_WORKFLOW }}-${{ github.run_id }}@${{ matrix.version\
          \ }}\nrepoName: nacos\nhelm:\n  chart: ./cicd/helm\n  git:\n    branch:\
          \ main\n  repoType: git\n  retries: 3\n  url: https://ghproxy.com/https://github.com/nacos-group/nacos-e2e.git\n\
          \  values:\n    namespace: nacos-${{ github.run_id }}-${{ strategy.job-index\
          \ }}\n    global:\n      mode: ${{ matrix.mode }}\n    nacos:\n      replicaCount:\
          \ ${{ env.REPLICA_COUNT }}\n      image:\n        repository: ${{ env.DOCKER_REPO_ACTUAL\
          \ }}\n        tag: ${{ matrix.version }}\n      storage:\n        type:\
          \ ${{ env.DATABASE }}\n        db:\n          port: 3306\n          username:\
          \ nacos\n          password: nacos\n          param: characterEncoding=utf8&connectTimeout=1000&socketTimeout=3000&autoReconnect=true&useSSL=false\n\
          \    service:\n      nodePort: ${{ env.NODE_PORT }}\n      type: ClusterIP\n"
    strategy:
      fail-fast: false
      matrix:
        mode:
        - cluster
        - standalone
        version: ${{ fromJSON(needs.docker.outputs.version-json) }}
    timeout-minutes: 60
  dist-tar:
    name: Build dist tar
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      uses: actions/cache@v3
      with:
        key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
        path: ~/.m2/repository
        restore-keys: '${{ runner.os }}-maven-

          '
    - continue-on-error: true
      uses: actions/checkout@v3
      with:
        submodules: true
    - continue-on-error: true
      uses: actions/setup-java@v3
      with:
        cache: maven
        distribution: temurin
        java-version: '8'
    - continue-on-error: true
      name: Build distribution tar
      run: 'mvn -Prelease-nacos -DskipTests clean install -U -e -Dorg.slf4j.simpleLogger.log.org.apache.maven.cli.transfer.Slf4jMavenTransferListener=warn

        '
    - continue-on-error: true
      name: Upload distribution tar
      uses: actions/upload-artifact@v3
      with:
        name: nacos
        path: distribution/target/nacos-server-*.tar.gz
    timeout-minutes: 30
  docker:
    env:
      DOCKERHUB_TOKEN_ACTUAL: ${{ secrets.DOCKERHUB_TOKEN }}
      DOCKERHUB_USER_ACTUAL: ${{ secrets.DOCKERHUB_USER }}
    if: ${{ success() }}
    name: Docker images
    needs:
    - dist-tar
    outputs:
      version-json: ${{ steps.show_versions.outputs.version-json }}
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      uses: actions/checkout@v3
      with:
        path: nacos-e2e
        ref: main
        repository: nacos-group/nacos-e2e.git
    - continue-on-error: true
      name: Download distribution tar
      uses: actions/download-artifact@v3
      with:
        name: nacos
        path: ./
    - continue-on-error: true
      id: build-images
      name: Generate image tag
      run: 'mv nacos-server-*.tar.gz nacos-e2e/cicd/build/

        cd nacos-e2e/cicd/build

        version=${{ github.event.pull_request.number || github.ref_name }}-$(uuidgen)

        mkdir versionlist

        touch versionlist/"${version}-`echo ${{ matrix.java-version }} | sed -e "s/:/-/g"`"

        ls versionlist/

        echo TAG=${version}-$(echo ${{ matrix.java-version }} | sed -e "s/:/-/g")
        >> $GITHUB_ENV

        '
    - continue-on-error: true
      name: docker-login-1
      uses: docker/login-action@v2
      with:
        password: ${{ secrets.DOCKERHUB_TOKEN }}
        registry: ${{ env.REGISTRY }}
        username: ${{ secrets.DOCKERHUB_USER }}
    - continue-on-error: true
      name: save docker_1 images
      run: 'mkdir build_backup

        cp -rf nacos-e2e/cicd/build/* ./build_backup/

        cd nacos-e2e/cicd/build

        docker build --no-cache -f Dockerfile -t ${DOCKER_REPO}:${{ env.TAG }} .

        docker push ${DOCKER_REPO}:${{ env.TAG }}

        '
    - continue-on-error: true
      name: docker-login-2
      uses: docker/login-action@v2
      with:
        password: ${{ secrets.DOCKERHUB_TOKEN_B }}
        registry: ${{ env.REGISTRY }}
        username: ${{ secrets.DOCKERHUB_USER_B }}
    - continue-on-error: true
      name: save docker_2 images
      run: 'rm -rf nacos-e2e/cicd/build/*

        mv ./build_backup/*  nacos-e2e/cicd/build/

        cd nacos-e2e/cicd/build

        docker build --no-cache -f Dockerfile -t ${DOCKER_REPO_B}:${{ env.TAG }} .

        docker push ${DOCKER_REPO_B}:${{ env.TAG }}

        '
    - continue-on-error: true
      id: show_versions
      name: Show versions
      run: 'a=(`ls nacos-e2e/cicd/build/versionlist`)

        printf ''%s\n'' "${a[@]}" | jq -R . | jq -s .

        echo version-json=`printf ''%s\n'' "${a[@]}" | jq -R . | jq -s .` >> $GITHUB_OUTPUT

        '
    strategy:
      matrix:
        base-image:
        - centos
        java-version:
        - '8'
    timeout-minutes: 30
  e2e-cpp-test:
    if: ${{ success() }}
    name: Cpp E2E Test
    needs:
    - docker
    - deploy
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      name: cpp e2e test
      uses: apache/rocketmq-test-tool@java-dev
      with:
        yamlString: "action: test\nnamespace: nacos-${{ github.run_id }}-${{ strategy.job-index\
          \ }}\naskConfig: ${{ secrets.ASK_CONFIG_VIRGINA }}\nAPI_VERSION: v1\nKIND:\
          \ Pod\nRESTART_POLICY: Never\nENV:\n  WAIT_TIME: 900\n  REPO_NAME: ${{ env.TEST_REPO_NAME\
          \ }}\n  CODE: https://github.com/${{ env.TEST_REPO_NAME }}\n  BRANCH: main\n\
          \  CODE_PATH: cpp\n  CMD: |\n    cd /root/code/cpp && make install\n   \
          \ echo \"export LD_LIBRARY_PATH=/usr/local/lib\" >> ~/.bashrc  && source\
          \ ~/.bashrc\n    cd /root/code/cpp/nacoscpptest\n    g++ nacos_test.cpp\
          \ -o nacos_test -lgtest -lpthread -I/usr/local/include/nacos/ -L/usr/local/lib/\
          \  -lnacos-cli\n    chmod 777 nacos_test && ./nacos_test --gtest_output=\"\
          xml:../target/surefire-reports/TEST-gtestresults.xml\"\n  ALL_IP: null\n\
          CONTAINER:\n  IMAGE: cloudnativeofalibabacloud/test-runner:v0.0.4\n  RESOURCE_LIMITS:\n\
          \    cpu: 2\n    memory: 2Gi\n  RESOURCE_REQUIRE:\n    cpu: 2\n    memory:\
          \ 2Gi\n"
    - continue-on-error: true
      if: always()
      name: Upload test log
      uses: actions/upload-artifact@v3
      with:
        name: testlog-${{ matrix.mode }}-cpp.txt
        path: testlog.txt
    - continue-on-error: true
      if: always()
      name: add markdown
      run: 'cat result.md >> $GITHUB_STEP_SUMMARY

        '
    strategy:
      fail-fast: false
      matrix:
        mode:
        - cluster
        - standalone
        version: ${{ fromJSON(needs.docker.outputs.version-json) }}
    timeout-minutes: 60
  e2e-csharp-test:
    if: ${{ success() }}
    name: Csharp E2E Test
    needs:
    - docker
    - deploy
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      name: csharp e2e test
      uses: apache/rocketmq-test-tool@java-dev
      with:
        yamlString: "action: test\nnamespace: nacos-${{ github.run_id }}-${{ strategy.job-index\
          \ }}\naskConfig: ${{ secrets.ASK_CONFIG_VIRGINA }}\nAPI_VERSION: v1\nKIND:\
          \ Pod\nRESTART_POLICY: Never\nENV:\n  WAIT_TIME: 900\n  REPO_NAME: ${{ env.TEST_REPO_NAME\
          \ }}\n  CODE: https://github.com/${{ env.TEST_REPO_NAME }}\n  BRANCH: main\n\
          \  CODE_PATH: csharp\n  CMD: |\n    rpm -Uvh https://packages.microsoft.com/config/centos/7/packages-microsoft-prod.rpm\n\
          \    yum -y install dotnet-sdk-3.1 && yum -y install aspnetcore-runtime-7.0\n\
          \    cd /root/code/csharp/nacos-csharp-sdk-test && dotnet restore\n    dotnet\
          \ test --logger:\"junit;LogFilePath=../target/surefire-reports/TEST-result.xml\"\
          \n  ALL_IP: null\nCONTAINER:\n  IMAGE: cloudnativeofalibabacloud/test-runner:v0.0.4\n\
          \  RESOURCE_LIMITS:\n    cpu: 2\n    memory: 2Gi\n  RESOURCE_REQUIRE:\n\
          \    cpu: 2\n    memory: 2Gi\n"
    - continue-on-error: true
      if: always()
      name: Upload test log
      uses: actions/upload-artifact@v3
      with:
        name: testlog-${{ matrix.mode }}-csharp.txt
        path: testlog.txt
    - continue-on-error: true
      if: always()
      name: add markdown
      run: 'cat result.md >> $GITHUB_STEP_SUMMARY

        '
    strategy:
      fail-fast: false
      matrix:
        mode:
        - cluster
        - standalone
        version: ${{ fromJSON(needs.docker.outputs.version-json) }}
    timeout-minutes: 60
  e2e-go-test:
    if: ${{ success() }}
    name: GO E2E Test
    needs:
    - docker
    - deploy
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      name: go e2e test
      uses: apache/rocketmq-test-tool@java-dev
      with:
        yamlString: "action: test\nnamespace: nacos-${{ github.run_id }}-${{ strategy.job-index\
          \ }}\naskConfig: ${{ secrets.ASK_CONFIG_VIRGINA }}\nAPI_VERSION: v1\nKIND:\
          \ Pod\nRESTART_POLICY: Never\nENV:\n  WAIT_TIME: 900\n  REPO_NAME: ${{ env.TEST_REPO_NAME\
          \ }}\n  CODE: https://github.com/${{ env.TEST_REPO_NAME }}\n  BRANCH: main\n\
          \  CODE_PATH: golang\n  CMD: |\n    cd /root/code/golang && go mod init\
          \ nacos_go_test && go mod tidy\n    gotestsum --junitfile ./target/surefire-reports/TEST-report.xml\
          \ ./nacosgotest\n  ALL_IP: null\nCONTAINER:\n  IMAGE: cloudnativeofalibabacloud/test-runner:v0.0.4\n\
          \  RESOURCE_LIMITS:\n    cpu: 2\n    memory: 2Gi\n  RESOURCE_REQUIRE:\n\
          \    cpu: 2\n    memory: 2Gi\n"
    - continue-on-error: true
      if: always()
      name: Upload test log
      uses: actions/upload-artifact@v3
      with:
        name: testlog-${{ matrix.mode }}-go.txt
        path: testlog.txt
    - continue-on-error: true
      if: always()
      name: add markdown
      run: 'cat result.md >> $GITHUB_STEP_SUMMARY

        '
    strategy:
      fail-fast: false
      matrix:
        mode:
        - cluster
        - standalone
        version: ${{ fromJSON(needs.docker.outputs.version-json) }}
    timeout-minutes: 60
  e2e-java-test:
    if: ${{ success() }}
    name: Java e2e Test
    needs:
    - docker
    - deploy
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      name: java e2e test
      uses: apache/rocketmq-test-tool@java-dev
      with:
        yamlString: "action: test\nnamespace: nacos-${{ github.run_id }}-${{ strategy.job-index\
          \ }}\naskConfig: ${{ secrets.ASK_CONFIG_VIRGINA }}\nAPI_VERSION: v1\nKIND:\
          \ Pod\nRESTART_POLICY: Never\nENV:\n  WAIT_TIME: 900\n  REPO_NAME: ${{ env.TEST_REPO_NAME\
          \ }}\n  CODE: https://github.com/${{ env.TEST_REPO_NAME }}\n  BRANCH: main\n\
          \  CODE_PATH: java/nacos-2X\n  CMD: mvn clean test -B\n  ALL_IP: null\n\
          CONTAINER:\n  IMAGE: cloudnativeofalibabacloud/test-runner:v0.0.4\n  RESOURCE_LIMITS:\n\
          \    cpu: 2\n    memory: 2Gi\n  RESOURCE_REQUIRE:\n    cpu: 2\n    memory:\
          \ 2Gi\n"
    - continue-on-error: true
      if: always()
      name: Upload test log
      uses: actions/upload-artifact@v3
      with:
        name: testlog-${{ matrix.mode }}-java.txt
        path: testlog.txt
    - continue-on-error: true
      if: always()
      name: add markdown
      run: 'cat result.md >> $GITHUB_STEP_SUMMARY

        '
    strategy:
      fail-fast: false
      matrix:
        mode:
        - cluster
        - standalone
        version: ${{ fromJSON(needs.docker.outputs.version-json) }}
    timeout-minutes: 60
  e2e-nodejs-test:
    if: ${{ success() }}
    name: Nodejs E2E Test
    needs:
    - docker
    - deploy
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      name: nodejs e2e test
      uses: apache/rocketmq-test-tool@java-dev
      with:
        yamlString: "action: test\nnamespace: nacos-${{ github.run_id }}-${{ strategy.job-index\
          \ }}\naskConfig: ${{ secrets.ASK_CONFIG_VIRGINA }}\nAPI_VERSION: v1\nKIND:\
          \ Pod\nRESTART_POLICY: Never\nENV:\n  WAIT_TIME: 900\n  REPO_NAME: ${{ env.TEST_REPO_NAME\
          \ }}\n  CODE: https://github.com/${{ env.TEST_REPO_NAME }}\n  BRANCH: main\n\
          \  CODE_PATH: nodejs\n  CMD: |\n    cd /root/code/nodejs/nacosnodejstest\
          \ && npm install\n    mocha test --reporter mocha-junit-reporter --reporter-options\
          \ mochaFile=../target/surefire-reports/TEST-report.xml\n  ALL_IP: null\n\
          CONTAINER:\n  IMAGE: cloudnativeofalibabacloud/test-runner:v0.0.4\n  RESOURCE_LIMITS:\n\
          \    cpu: 2\n    memory: 2Gi\n  RESOURCE_REQUIRE:\n    cpu: 2\n    memory:\
          \ 2Gi\n"
    - continue-on-error: true
      if: always()
      name: Upload test log
      uses: actions/upload-artifact@v3
      with:
        name: testlog-${{ matrix.mode }}-nodejs.txt
        path: testlog.txt
    - continue-on-error: true
      if: always()
      name: add markdown
      run: 'cat result.md >> $GITHUB_STEP_SUMMARY

        '
    strategy:
      fail-fast: false
      matrix:
        mode:
        - cluster
        - standalone
        version: ${{ fromJSON(needs.docker.outputs.version-json) }}
    timeout-minutes: 60
  e2e-python-test:
    if: ${{ success() }}
    name: Python E2E Test
    needs:
    - docker
    - deploy
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      name: python e2e test
      uses: apache/rocketmq-test-tool@java-dev
      with:
        yamlString: "action: test\nnamespace: nacos-${{ github.run_id }}-${{ strategy.job-index\
          \ }}\naskConfig: ${{ secrets.ASK_CONFIG_VIRGINA }}\nAPI_VERSION: v1\nKIND:\
          \ Pod\nRESTART_POLICY: Never\nENV:\n  WAIT_TIME: 900\n  REPO_NAME: ${{ env.TEST_REPO_NAME\
          \ }}\n  CODE: https://github.com/${{ env.TEST_REPO_NAME }}\n  BRANCH: main\n\
          \  CODE_PATH: python\n  CMD: |\n    cd /root/code/python && pip3 install\
          \ -r requirements.txt && source ~/.bashrc\n    cd nacospythontest && pytest\
          \ --junitxml ../target/surefire-reports/TEST-report.xml test/*_test.py --log-cli-level=DEBUG\n\
          \  ALL_IP: null\nCONTAINER:\n  IMAGE: cloudnativeofalibabacloud/test-runner:v0.0.4\n\
          \  RESOURCE_LIMITS:\n    cpu: 2\n    memory: 2Gi\n  RESOURCE_REQUIRE:\n\
          \    cpu: 2\n    memory: 2Gi\n"
    - continue-on-error: true
      if: always()
      name: Upload test log
      uses: actions/upload-artifact@v3
      with:
        name: testlog-${{ matrix.mode }}-python.txt
        path: testlog.txt
    - continue-on-error: true
      if: always()
      name: add markdown
      run: 'cat result.md >> $GITHUB_STEP_SUMMARY

        '
    strategy:
      fail-fast: false
      matrix:
        mode:
        - cluster
        - standalone
        version: ${{ fromJSON(needs.docker.outputs.version-json) }}
    timeout-minutes: 60
name: PUSH-CI
on:
  repository_dispatch:
    types: trigger-ga___push-ci.yaml
permissions:
  contents: read
